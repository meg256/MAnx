name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    # This is needed for miniconda, see:
    # https://github.com/marketplace/actions/setup-miniconda#important.
    shell: bash -l {0}

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      #- name: Checkout submodules
      #  uses: textbook/git-checkout-submodule-action@2.0.0
      - name: formatting
        uses: github/super-linter@v3.16.1
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Lint workflow
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .
        snakefile: workflow/Snakefile
        #stagein: "mamba install -y -n snakemake --channel conda-forge pyarrow=6.0"
        args: "--lint"

  Dryrun_Tests:
    runs-on: ubuntu-latest
    needs: 
      - Linting
      - Formatting
    steps:
    - uses: actions/checkout@v4
    - name: Dryrun_test
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .tests
        snakefile: workflow/Snakefile
        #args: "--use-conda --printshellcmds --show-failed-logs -j 10 --conda-cleanup-pkgs cache --dryrun"
        args: "--configfile .tests/config.yaml --use-conda --printshellcmds --show-failed-logs -j 10 --conda-cleanup-pkgs cache --dryrun"

    #- name: Test report
    #  uses: snakemake/snakemake-github-action@v1.24.0
    #  with:
    #    directory: .test
    #    snakefile: workflow/Snakefile
    #    args: "--report report.zip"

  Full_Integration_Tests:
    runs-on: ubuntu-latest
    needs:
      - Dryrun_Tests
    steps:
      - name: Integration_test
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: .tests
          snakefile: workflow/Snakefile
          #args: "--use-conda --printshellcmds --show-failed-logs --cores 1 --set-scatter calling=4 --conda-cleanup-pkgs cache"
          args: "--configfile .tests/config.yaml --use-conda --printshellcmds --show-failed-logs --cores 1 --set-scatter calling=4 --conda-cleanup-pkgs cache"
          show-disk-usage-on-error: true
